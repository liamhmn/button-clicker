{"mappings":"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","sources":["src/analytics.js","src/constants.js","src/helpers.ts","src/state/clicks.js","src/state/cursor.js","src/state/generators.js","src/state/messages.js","src/views/counter.js","src/views/cursor.js","src/views/generators.js","src/views/message.js","src/actions/index.js","src/index.ts","src/events/index.js"],"sourcesContent":["/**\n * Global site tag (gtag.js) - Google Analytics\n *\n * https://developers.google.com/analytics/devguides/collection/gtagjs\n */\n\nwindow.gtag('config', process.env.GOOGLE_ANALYTICS_ID);\n\nwindow[`ga-disable-${process.env.GOOGLE_ANALYTICS_ID}`] =\n  process.env.NODE_ENV !== 'production';\n\nconst script = document.createElement('script');\nscript.async = true;\nscript.src = `https://www.googletagmanager.com/gtag/js?id=${process.env.GOOGLE_ANALYTICS_ID}`;\ndocument.head.appendChild(script);\n","export const EVENT_CLICK = 'click';\nexport const SELECTOR_BUTTON = 'button';\n","import { SELECTOR_BUTTON } from './constants';\n\n/**\n * Elements.\n */\nconst cursor = document.getElementById('cursor')!;\n\nexport const elements = {\n  button: document.getElementById('button')!,\n  counter: document.getElementById('counter')!,\n  cursor,\n  cursorButton: cursor.querySelector(SELECTOR_BUTTON)!,\n  message: document.getElementById('message')!,\n  store: document.getElementById('store')!,\n};\n\n/**\n * Calculates next cost of cursor or generator upgrade.\n *\n * @param base - Current base.\n * @param rate - Current rate.\n * @param owned - Amount owned.\n * @returns - Next cost.\n */\nexport const calculateNextCost = (\n  base: number,\n  rate: number,\n  owned: number\n): number => Math.floor(base * Math.pow(rate, owned));\n\n/**\n * Gets element by id (from cache if applicable).\n *\n * @param id - Element id.\n * @returns - Element.\n */\nexport function getElementById(id: keyof typeof elements): HTMLElement {\n  if (elements[id]) {\n    return elements[id];\n  }\n  return ((elements[id] as HTMLElement) = document.getElementById(id)!);\n}\n\n/**\n * Formats generator output description.\n *\n * @example\n * // returns '1 click per 1 second'\n * formatGeneratorOutput(1, 1);\n *\n * @example\n * // returns '2 clicks per 2 seconds'\n * formatGeneratorOutput(2, 2);\n *\n * @param clicks - Clicks.\n * @param seconds - Seconds.\n * @returns - Description.\n */\nexport const formatGeneratorOutput = (\n  clicks: number,\n  seconds: number\n): string =>\n  `${clicks.toLocaleString()} ${\n    clicks === 1 ? 'click' : 'clicks'\n  } per ${seconds.toLocaleString()} ${seconds === 1 ? 'second' : 'seconds'}`;\n","export const clicks = {\n  current: 0,\n  total: 0,\n};\n","export const cursor = {\n  message: 'Upgraded cursor click power.',\n  owned: 1,\n  cost: {\n    base: 100,\n    rate: 2,\n  },\n  output: {\n    base: 2,\n    current: 1,\n  },\n};\n\ncursor.cost.next = cursor.cost.base;\ncursor.output.next = cursor.output.base;\n","/**\n * @see {@link https://coderpatsy.bitbucket.io/cookies/cookies.html}\n */\nexport const generators = {\n  generator1: {\n    label: 'Generator 1',\n    message: 'Purchased Generator 1.',\n    owned: 0,\n    delay: 10, // seconds\n    cost: {\n      base: 15,\n      rate: 1.15,\n    },\n    output: {\n      base: 1,\n      current: 0,\n    },\n  },\n\n  generator2: {\n    label: 'Generator 2',\n    message: 'Purchased Generator 2.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 100,\n      rate: 1.15,\n    },\n    output: {\n      base: 1,\n      current: 0,\n    },\n  },\n\n  generator3: {\n    label: 'Generator 3',\n    message: 'Purchased Generator 3.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 11e2, // 1,100\n      rate: 1.15,\n    },\n    output: {\n      base: 8,\n      current: 0,\n    },\n  },\n\n  generator4: {\n    label: 'Generator 4',\n    message: 'Purchased Generator 4.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 12e3, // 12,000\n      rate: 1.15,\n    },\n    output: {\n      base: 47,\n      current: 0,\n    },\n  },\n\n  generator5: {\n    label: 'Generator 5',\n    message: 'Purchased Generator 5.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 13e4, // 130,000\n      rate: 1.15,\n    },\n    output: {\n      base: 260,\n      current: 0,\n    },\n  },\n\n  generator6: {\n    label: 'Generator 6',\n    message: 'Purchased Generator 6.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 14e5, // 1,400,000\n      rate: 1.15,\n    },\n    output: {\n      base: 14e2, // 1,400\n      current: 0,\n    },\n  },\n\n  generator7: {\n    label: 'Generator 7',\n    message: 'Purchased Generator 7.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 2e7, // 20,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 78e2, // 7,800\n      current: 0,\n    },\n  },\n\n  generator8: {\n    label: 'Generator 8',\n    message: 'Purchased Generator 8.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 33e7, // 330,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 44e3, // 44,000\n      current: 0,\n    },\n  },\n\n  generator9: {\n    label: 'Generator 9',\n    message: 'Purchased Generator 9.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 51e8, // 5,100,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 26e4, // 260,000\n      current: 0,\n    },\n  },\n\n  generator10: {\n    label: 'Generator 10',\n    message: 'Purchased Generator 10.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 75e9, // 75,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 16e5, // 1,600,000\n      current: 0,\n    },\n  },\n\n  generator11: {\n    label: 'Generator 11',\n    message: 'Purchased Generator 11.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 1e12, // 1,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 1e7, // 10,000,000\n      current: 0,\n    },\n  },\n\n  generator12: {\n    label: 'Generator 12',\n    message: 'Purchased Generator 12.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 14e12, // 14,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 65e6, // 65,000,000\n      current: 0,\n    },\n  },\n\n  generator13: {\n    label: 'Generator 13',\n    message: 'Purchased Generator 13.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 17e13, // 170,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 43e7, // 430,000,000\n      current: 0,\n    },\n  },\n\n  generator14: {\n    label: 'Generator 14',\n    message: 'Purchased Generator 14.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 21e14, // 2,100,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 29e8, // 2,900,000,000\n      current: 0,\n    },\n  },\n\n  generator15: {\n    label: 'Generator 15',\n    message: 'Purchased Generator 15.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 26e15, // 26,000,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 21e9, // 21,000,000,000\n      current: 0,\n    },\n  },\n\n  generator16: {\n    label: 'Generator 16',\n    message: 'Purchased Generator 16.',\n    owned: 0,\n    delay: 1, // seconds\n    cost: {\n      base: 31e16, // 310,000,000,000,000,000\n      rate: 1.15,\n    },\n    output: {\n      base: 15e10, // 150,000,000,000\n      current: 0,\n    },\n  },\n};\n\nObject.keys(generators).forEach((id) => {\n  // set `next` value for generator `cost` and `output`\n  const generator = generators[id];\n  generator.cost.next = generator.cost.base;\n  generator.output.next = generator.output.base;\n});\n","export const messages = {\n  1: 'The clicking has commenced...',\n  1e1: 'The button has been clicked ten times.',\n  1e2: 'The button has been clicked one hundred times.',\n  1e3: 'The button has been clicked one thousand times.',\n  1e4: 'The button has been clicked ten thousand times.',\n  1e5: 'The button has been clicked one hundred thousand times.',\n  1e6: 'The button has been clicked one million times.',\n  1e7: 'The button has been clicked ten million times.',\n  1e8: 'The button has been clicked one hundred million times.',\n  1e9: 'The button has been clicked one billion times.',\n  1e10: 'The button has been clicked ten billion times.',\n  1e12: 'The button has been clicked one hundred billion times.',\n  1e13: 'The button has been clicked one trillion times.',\n  1e14: 'The button has been clicked ten trillion times.',\n  1e15: 'The button has been clicked one hundred trillion times.',\n  1e16: 'The button has been clicked one quadrillion times.',\n  1e17: 'The button has been clicked ten quadrillion times.',\n  1e18: 'The button has been clicked one hundred quadrillion times.',\n  1e19: 'The button has been clicked one quitillion times.',\n  1e20: 'The button has been clicked ten quitillion times.',\n  1e21: 'The button has been clicked one hundred quitillion times.',\n  1e22: 'The button has been clicked one sextillion times.',\n};\n","import { elements } from '../helpers';\nimport * as state from '../state';\n\n/**\n * Renders counter.\n */\nexport function renderCounter() {\n  elements.counter.innerText = state.clicks.current.toLocaleString();\n}\n","import { elements } from '../helpers';\nimport * as state from '../state';\n\n/**\n * Renders cursor.\n */\nexport function renderCursor() {\n  const cursorRow = elements.cursor;\n  const { cursor } = state;\n  cursorRow.querySelector('.owned').innerText = (\n    cursor.owned - 1\n  ).toLocaleString();\n  cursorRow.querySelector('.cost').innerText =\n    cursor.cost.next.toLocaleString();\n  cursorRow.querySelector(\n    '.output-current'\n  ).innerText = `${cursor.output.current.toLocaleString()} per click`;\n  cursorRow.querySelector(\n    '.output-next'\n  ).innerText = `${cursor.output.next.toLocaleString()} per click`;\n}\n","import { SELECTOR_BUTTON } from '../constants';\nimport { elements, formatGeneratorOutput, getElementById } from '../helpers';\nimport * as state from '../state';\n\n/**\n * Appends generators to table.\n */\nexport function initializeGenerators() {\n  Object.keys(state.generators).forEach((id) => {\n    const generator = state.generators[id];\n    const generatorElement = elements.cursor.cloneNode(true);\n    generatorElement.id = id;\n    const button = generatorElement.querySelector(SELECTOR_BUTTON);\n    button.title = generator.label;\n    button.innerText = generator.label;\n    elements.store.appendChild(generatorElement);\n  });\n}\n\n/**\n * Renders generator.\n *\n * @param {string} id\n */\nexport function renderGenerator(id) {\n  const generator = state.generators[id];\n  const generatorRow = getElementById(id);\n  generatorRow.querySelector('.owned').innerText =\n    generator.owned.toLocaleString();\n  generatorRow.querySelector('.cost').innerText =\n    generator.cost.next.toLocaleString();\n  generatorRow.querySelector('.output-current').innerText =\n    formatGeneratorOutput(generator.output.current, generator.delay);\n  generatorRow.querySelector('.output-next').innerText = formatGeneratorOutput(\n    generator.output.next,\n    generator.delay\n  );\n}\n\n/**\n * Renders generators\n */\nexport function renderGenerators() {\n  Object.keys(state.generators).forEach((id) => {\n    renderGenerator(id);\n  });\n}\n","import { elements } from '../helpers';\nimport * as state from '../state';\n\n/**\n * Renders message.\n *\n * @param {string} text\n */\nexport function renderMessage(text = '') {\n  const { total } = state.clicks;\n  let message;\n\n  if (text) {\n    message = text;\n  } else {\n    // check for exact match in messages table\n    if (state.messages[total]) {\n      message = state.messages[total];\n      delete state.messages[total];\n    } else {\n      // otherwise compare number of first message\n      for (const key in state.messages) {\n        if (total >= key) {\n          message = state.messages[key];\n          delete state.messages[key];\n        }\n        break;\n      }\n    }\n  }\n\n  if (!message) {\n    return;\n  }\n\n  message = message.toLocaleString();\n  if (message !== elements.message.innerText) {\n    elements.message.innerText = message;\n  }\n}\n","import { SELECTOR_BUTTON } from '../constants';\nimport { calculateNextCost, elements, getElementById } from '../helpers';\nimport * as state from '../state';\nimport * as views from '../views';\n\n/**\n * Increments clicks.\n *\n * @param {number} number\n * @param {boolean} skipTotal\n */\nexport function increment(number, skipTotal = false) {\n  const { clicks } = state;\n  clicks.current += number;\n  if (!skipTotal) {\n    clicks.total += number;\n    views.renderMessage();\n  }\n\n  views.renderCounter();\n  elements.cursorButton.disabled = clicks.current < state.cursor.cost.next;\n\n  const { generators } = state;\n  Object.keys(generators).forEach((id) => {\n    const generatorRow = getElementById(id);\n    const generatorButton = generatorRow.querySelector(SELECTOR_BUTTON);\n    generatorButton.disabled = clicks.current < generators[id].cost.next;\n  });\n}\n\n/**\n * Decrements clicks.\n *\n * @param {number} clicks\n */\nexport function decrement(clicks) {\n  increment(-clicks, true);\n}\n\n/**\n * Updates cursor.\n */\nexport function updateCursor() {\n  const { cursor } = state;\n  const { cost, output } = cursor;\n  const owned = ++cursor.owned;\n  cost.next = calculateNextCost(cost.base, cost.rate, owned - 1);\n  output.current = output.next;\n  output.next = Math.round(output.base * owned);\n  views.renderCursor();\n}\n\n/**\n * Updates generator.\n *\n * @param {string} id\n */\nexport function updateGenerator(id) {\n  const generator = state.generators[id];\n  const { cost, output } = generator;\n  const owned = ++generator.owned;\n  cost.next = calculateNextCost(cost.base, cost.rate, owned);\n  output.current = output.next;\n  output.next = Math.round(output.base * (owned + 1));\n  views.renderGenerator(id);\n}\n","import './analytics';\n\nimport * as events from './events';\nimport * as views from './views';\n\nviews.initializeGenerators();\nviews.renderCounter();\nviews.renderCursor();\nviews.renderGenerators();\n\nevents.addButtonListener();\nevents.addCursorListener();\nevents.addGeneratorListeners();\n","import * as actions from '../actions';\nimport { EVENT_CLICK, SELECTOR_BUTTON } from '../constants';\nimport { elements, getElementById } from '../helpers';\nimport * as state from '../state';\nimport * as views from '../views';\n\n/**\n * Handle button click.\n */\nexport function addButtonListener() {\n  elements.button.addEventListener(EVENT_CLICK, () => {\n    actions.increment(state.cursor.output.current);\n  });\n}\n\n/**\n * Handle cursor upgrade.\n */\nexport function addCursorListener() {\n  elements.cursorButton.addEventListener(EVENT_CLICK, () => {\n    if (state.clicks.current >= state.cursor.cost.next) {\n      const { cursor } = state;\n      actions.decrement(cursor.cost.next);\n      actions.updateCursor();\n      views.renderMessage(cursor.message);\n    }\n  });\n}\n\n/**\n * Handle generator purchase.\n */\nexport function addGeneratorListeners() {\n  Object.keys(state.generators).forEach((id) => {\n    const generator = state.generators[id];\n    const generatorRow = getElementById(id);\n\n    generatorRow\n      .querySelector(SELECTOR_BUTTON)\n      .addEventListener(EVENT_CLICK, () => {\n        if (state.clicks.current >= generator.cost.next) {\n          actions.decrement(generator.cost.next);\n          actions.updateGenerator(id);\n\n          if (generator.interval) {\n            generator.interval.callback = () => {\n              actions.increment(generator.output.current);\n            };\n          } else {\n            generator.interval = {\n              callback: () => {\n                actions.increment(generator.output.current);\n              },\n            };\n            setInterval(generator.interval.callback, generator.delay * 1000);\n          }\n\n          if (generator.message) {\n            views.renderMessage(generator.message);\n          }\n        }\n      });\n  });\n}\n"],"names":["window","gtag","$8d4e2519951fb1b8$var$script","document","createElement","async","src","head","appendChild","$dbe30d31ecb4b743$export$5adb665701eda1ce","$dbe30d31ecb4b743$export$696d60fcf9b67af7","$aabea8d171be69d0$var$cursor","getElementById","$aabea8d171be69d0$export$7a5d735b2ab6389d","button","counter","cursorButton","querySelector","message","store","$aabea8d171be69d0$export$24a3a14ac508a02a","base","rate","owned","Math","floor","pow","$aabea8d171be69d0$export$83595b84fc78b9b4","id","$aabea8d171be69d0$export$b6a886d21b45a017","clicks","seconds","toLocaleString","$c18b897a692da3a5$export$588d2644c3d0ac7d","current","total","$43ffdda8519759cc$export$58734539bbfa41a2","cost","output","next","$2686fc83aff6854c$export$9ec5986e7845e62e","generator1","label","delay","generator2","generator3","generator4","generator5","generator6","generator7","generator8","generator9","generator10","generator11","generator12","generator13","generator14","generator15","generator16","Object","keys","forEach","generator","$5c6831d9d4c6a7de$export$defe85febe8b728c","$c34ca01ecbf0c7ed$export$a3fb58addc549f8e","innerText","$a656e8158adad584$export$2fd24a2aa60fc106","cursorRow","cursor","$7a4006799169e96e$exports","$9d7e7394e7f49975$export$dd2d3563fc7d8090","generatorRow","$effc3af34e26a3e0$export$7b9c635b0dc56d38","text","key","$10013b3e125ec6dc$export$a2647aa13413c947","number","skipTotal","disabled","generators","$10013b3e125ec6dc$export$8f85cc9753f280aa","generatorElement","cloneNode","title","addEventListener","round","$10013b3e125ec6dc$export$56acf8839b1f401e","$10013b3e125ec6dc$export$db5f819c6f0133fe","interval","callback","setInterval"],"version":3,"file":"index.75028b3e.js.map"}